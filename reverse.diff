diff --git a/config.def.h b/config.def.h
index cdd3bb1..602fbfc 100644
--- a/config.def.h
+++ b/config.def.h
@@ -44,11 +44,10 @@ static const Rule rules[] = {
 	 *	WM_CLASS(STRING) = instance, class
 	 *	WM_NAME(STRING) = title
 	 */
-	/* class        instance             title  tags mask  isfloating  isnotification monitor */
-	{ "Gimp",       NULL,                NULL,  0,         1,          0,             -1 },
-	{ "Firefox",    NULL,                NULL,  1 << 8,    0,          0,             -1 },
-	{ NULL,         "FloatingTerminal",  NULL,  0,         1,          0,             -1 },
-	{ NULL,         "NotifyTerminal",    NULL,  0,         1,          1,             -1 },
+	/* class        instance             title  tags mask  isfloating  monitor */
+	{ "Gimp",       NULL,                NULL,  0,         1,          -1 },
+	{ "Firefox",    NULL,                NULL,  1 << 8,    0,          -1 },
+	{ NULL,         "FloatingTerminal",  NULL,  0,         1,          -1 },
 };
 
 /* layout(s) */
diff --git a/dwm.c b/dwm.c
index 40c01e6..733d45d 100644
--- a/dwm.c
+++ b/dwm.c
@@ -101,7 +101,7 @@ struct Client {
 	int basew, baseh, incw, inch, maxw, maxh, minw, minh;
 	int bw, oldbw;
 	unsigned int tags;
-	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, issticky, isnotification;
+	int isfixed, isfloating, isurgent, neverfocus, oldstate, isfullscreen, issticky;
 	Client *next;
 	Client *snext;
 	Monitor *mon;
@@ -150,7 +150,6 @@ typedef struct {
 	const char *title;
 	unsigned int tags;
 	int isfloating;
-	int isnotification;
 	int monitor;
 } Rule;
 
@@ -335,8 +334,6 @@ applyrules(Client *c)
 		&& (!r->instance || strstr(instance, r->instance)))
 		{
 			c->isfloating = r->isfloating;
-			c->isnotification = r->isnotification;
-			if (c->isnotification) c->isfloating = c->isnotification;
 			c->tags |= r->tags;
 			for (m = mons; m && m->num != r->monitor; m = m->next);
 			if (m)
@@ -1118,7 +1115,6 @@ manage(Window w, XWindowAttributes *wa)
 	c->w = c->oldw = wa->width;
 	c->h = c->oldh = wa->height;
 	c->oldbw = wa->border_width;
-	c->isnotification = 0;
 
 	updatetitle(c);
 	if (XGetTransientForHint(dpy, w, &trans) && (t = wintoclient(trans))) {
@@ -1146,15 +1142,8 @@ manage(Window w, XWindowAttributes *wa)
 	updatewindowtype(c);
 	updatesizehints(c);
 	updatewmhints(c);
-	if (!c->isnotification) {
-		c->x = c->mon->mx + (c->mon->mw - WIDTH(c)) / 2;
-		c->y = c->mon->my + (c->mon->mh - HEIGHT(c)) / 2;
-	} else {
-		// c->w = c->mon->mw / 5;
-		// c->h = c->mon->mh / 5;
-		c->x = c->mon->mx + (c->mon->mw - WIDTH(c));
-		c->y = c->mon->my + 30;
-	}
+	c->x = c->mon->mx + (c->mon->mw - WIDTH(c)) / 2;
+	c->y = c->mon->my + (c->mon->mh - HEIGHT(c)) / 2;
 	XSelectInput(dpy, w, EnterWindowMask|FocusChangeMask|PropertyChangeMask|StructureNotifyMask);
 	grabbuttons(c, 0);
 	if (!c->isfloating)
